version: '3'
services:
  elasticsearch:
     container_name: elasticsearch
     build:
        context: elasticsearch
        args:
           ELK_VERSION: $ELK_VERSION
     volumes:
       - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      #  - ./elasticsearch/storage:/usr/share/elasticsearch/data:rw
     ports:
       - "9200:9200"
     environment:
       - ELASTIC_PASSWORD="changeme"
       - ES_JAVA_OPTS=-Xmx256m -Xms256m
       - discovery.type=single-node
       - bootstrap.memory_lock=true
       - http.cors.allow-origin=*
     ulimits:  
       memlock:  
         soft:  -1  
         hard:  -1
     networks:
       - elk

  logstash:
     container_name: logstash
     build:
        context: logstash
        args:
          ELK_VERSION: $ELK_VERSION
     volumes:
       - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
       - ./logstash/pipeline:/usr/share/logstash/pipeline
     environment:
       - ES_JAVA_OPTS=-Xmx256m -Xms256m
     networks:
       - elk
     depends_on:
       - elasticsearch
    
  kibana:
     container_name: kibana
     build:
        context: kibana/
        args:
          ELK_VERSION: $ELK_VERSION
     volumes:
       - ./kibana/config:/usr/share/kibana/config
     ports:
       - "5601:5601"
     environment:
       - ELASTICSEARCH_PASSWORD="changeme"
       - ELASTICSEARCH_HOSTS="http://elasticsearch:9200"
     networks:
       - elk
     depends_on:
       - elasticsearch
       
  filebeat:
    container_name: filebeat
    build:
      context: filebeat
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./filebeat/dockerlogs:/usr/share/filebeat/dockerlogs/data:rw
      - ./filebeat/nginxlogs:/usr/share/filebeat/nginxlogs/data:rw
      - /var/lib/docker/containers:/usr/share/dockerlogs/data:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/log/nginx:/usr/share/nginxlogs/data:ro
    ports:
      - "5004:5000"
    networks:
      - elk

  metricbeat:
    container_name: metricbeat
    build:
      context: metricbeat
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - /var/lib/docker/containers://var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - elk
    depends_on:
      - elasticsearch
      - logstash
  nginx:
     image: nginx:alpine
     container_name: nginx
     volumes:
       - './nginx/etc/nginx.conf:/etc/nginx/nginx.conf:ro'
       - './nginx/public:/usr/share/nginx/html:ro'
       - './nginx/etc/.htpasswd.user:/etc/nginx/.htpasswd.user:ro'
     links:
       - elasticsearch
       - kibana
     depends_on:
       - elasticsearch
       - kibana
     ports:
       - '80:80'
     networks:
       - elk      
         
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.1
    hostname: zookeeper
    container_name: zookeeper
    networks: 
      - elk
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  broker:
    image: confluentinc/cp-server:5.5.1
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9101:9101"
    networks: 
      - elk
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      
networks:
  elk:
     driver: bridge